Class PB_BulletPuff : BulletPuff
{
	Default
	{
		+NOEXTREMEDEATH;
		+THRUACTORS;
		Decal "BulletDecalNew1";
		+DONTSPLASH;
		-EXPLODEONWATER;
		Scale 0.09;
	}
	states
	{
		Spawn:
			TNT1 A 0 NODELAY;
			TNT1 AAAAA 0 A_SpawnProjectile("SparkXNoModel", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAAAA 0 A_SpawnProjectile("SparkX", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAA 0 A_SpawnProjectile("HitSpark", 0, 0, frandom(0,1)*frandom (0, 360), 2, frandom(0,1)*frandom (30, 360));
			TNT1 AAA 0 A_SpawnProjectile("HitSpark22", 0, 0, frandom(0,1)*frandom (0, 360), 2, frandom(0,1)*frandom (30, 360));
			TNT1 AAA 0 A_SpawnProjectile("HitSpark23", 0, 0, frandom(0,1)*frandom (0, 360), 2, frandom(0,1)*frandom (30, 360));
			TNT1 AAAAA 0 A_SpawnProjectile("OldschoolRocketSmokeTrail2", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 A 0 A_Jump(256, "Spawn1", "Spawn2", "Spawn3", "Spawn4");
			Stop;
		Spawn1:
			IPF2 AABB 1 bright A_SpawnItem ("YellowFlareSmall", 0);
			Stop;
		Spawn2:
			IPF2 CCDD 1 bright A_SpawnItem ("YellowFlareSmall", 0);
			Stop;
		Spawn3:
			IPF2 EEFF 1 bright A_SpawnItem ("YellowFlareSmall", 0);
			Stop;
		Spawn4:
			IPF2 GGHH 1 bright A_SpawnItem ("YellowFlareSmall", 0);
			Stop;	
		Melee:
			TNT1 AA 0 A_SpawnProjectile ("OldschoolRocketSmokeTrail2", 0, 0, random (0, 360), 2, random (0, 360));
			stop;
	}
}

Class CryoRifleBeamPuff : actor
{
	default
	{
		+noblockmap;
		height 2;
		radius 2;
		renderstyle "add";
		+nogravity;
		DamageType "Freeze";
		+NODAMAGETHRUST;
		Decal "FreezerBurnSmall";
		+forcexybillboard;
	}
	states
	{
		spawn:
			BXPL A 0 nodelay Bright {
				A_Explode(24, 60, 0, 90);
				A_SpawnItemEx("CryoSmoke", 0, 0, 0, random(10, 30)*0.1, 0, random(0, 10)*0.1, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION);
				A_SpawnItemEx("IceExplosionImpact", 0, 0, 0, 0, 0, 0, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION);
				
				if(random(0,255) > 220)
				{
					A_SpawnItemEx ("RandomMediumIcecrystal",random(-30,30), random(-30,30),random(1,20),0,0,0,0,SXF_NOCHECKPOSITION,0);
					A_SpawnItemEx ("RandomSmallIcecrystal",random(-30,30), random(-30,30),random(1,20),0,0,0,0,SXF_NOCHECKPOSITION,0);
				}
				
				if(pos.z <= floorz + 5)
					A_SpawnItemEx ("DetectFloorIce",random(-20,20), random(-20,20),1,0,0,0,0,SXF_NOCHECKPOSITION,0);
				if(pos.z >= ceilingz - 5)
					A_SpawnItemEx ("DetectCeilIce",random(-10,10), random(-10,10),1,0,0,0,0,SXF_NOCHECKPOSITION,0);
				
			}
			BXPL ABCDEFGH 1 Bright;
			BXPL IJKLM 1 Bright A_FadeOut(0.1);
			stop;
	}
	
	override void beginplay()
	{
		super.beginplay();
		bxflip = random(0,1);
		byflip = random(0,1);
	}

}

Class UnmakerBeamPuff : actor
{
	Default
	{
		DamageType "Fire";
		height 2;
		radius 2;
		+noblockmap;
		renderstyle "Add";
		+nogravity;
	}
	states
	{
		spawn:
			TNT1 A 0 nodelay {
				A_SpawnItem("RedLightningTrial",0);
				A_SpawnItemEx("DTechBurningPiece", random (-15, 15), random (-15, 15),0, 0, 0, 0, 0, 128, 150);
				A_SpawnItemEx("DTechBurningPiece2", random (-35, 35), random (-35, 35),0, 0, 0, 0, 0, 128, 150);
				A_SpawnItemEx("DTechBurningPiece3", random (-45, 45), random (-45, 35), 0, 0, 0, 0, 0, 128, 150);
				A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,180);
				A_SpawnItemEx ("DetectCeilCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,180);
				A_explode(20, 100);
			}
			TNT1 A 1;
			stop;
	}
}

Class UnmakerOverchargePuff : actor
{
	Default
	{
		DamageType "ExplosiveImpact";
		renderstyle "Add";
		height 2;
		radius 2;
		+noblockmap;
		+nogravity;
		alpha 0.7;
	}
	states
	{
		Death:
		Crash:
			TNT1 A 1;
			stop;
		Spawn:
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15),0, 0, 0, 0, 0, 128, 150);
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35),0, 0, 0, 0, 0, 128, 150);
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35), 0, 0, 0, 0, 0, 128, 150);
			TNT1 A 0 A_SpawnItemEx("OverchargeGroundSpike",frandom(-15,15),frandom(-15,15),0,0,0,0,0,0,150);
			TNT1 AA 0 A_SpawnItemEx("OverchargeGroundLump",frandom(-30,30),frandom(-30,30),0,0,0,0,0,0,150);
			TNT1 A 0 A_jump(24,"FullEffect");
			TNT1 A 0 A_jump(32,"VisualFxEnd");
			goto NoFxEnd;
			
		Xdeath:
			
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15),0, 0, 0, 0, 0, 128, 150);
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35),0, 0, 0, 0, 0, 128, 150);
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35), 0, 0, 0, 0, 0, 128, 150);
			TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("DetectCeilCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx("OverchargeGroundSpikeG",frandom(-15,15),frandom(-15,15),0,0,0,0,0,0,150);
			TNT1 AA 0 A_SpawnItemEx("OverchargeGroundLumpG",frandom(-30,30),frandom(-30,30),0,0,0,0,0,0,150);
			TNT1 A 0 A_jump(24,"FullEffect");
			TNT1 A 0 A_jump(32,"VisualFxEnd");
			goto NoFxEnd;
			
		NoFxEnd:
			TNT1 A 0 { 
				A_explode(20, 100);
				A_StartSound("FAREXPL", CHAN_AUTO|CHANF_OVERLAP);
				Radius_Quake (3, 8, 0, 15, 0);
			}
			TNT1 A 1;
			stop;
		FullEffect:
			TNT1 A 0 { 
				A_explode(20, 100);
				A_SpawnItem("ExcavatorExploFX");
				A_StartSound("FAREXPL", CHAN_AUTO|CHANF_OVERLAP);
				Radius_Quake (3, 8, 0, 15, 0);
			}
			REXP ABCDEFGHIJKLMNOPQRS 1 BRIGHT;
			stop;
		VisualFxEnd:
			TNT1 A 0 { 
				A_explode(20, 100);
				A_StartSound("FAREXPL", CHAN_AUTO|CHANF_OVERLAP);
				Radius_Quake (3, 8, 0, 15, 0);
			}
			REXP ABCDEFGHIJKLMNOPQRS 1 BRIGHT;
			stop;
	}
	
	override void Beginplay()
	{
		super.beginplay();
		bxflip = random(0,1); //this doesnt even have rotations, so spriteflip is not really needed
		A_Setscale(frandom(0.2,1.2));
	}
}

//its not really a puff, but its similar to a puff, this just does the explode thing for the railgun rail
Class RailgunAOEPuff : Actor
{
	default
	{
		radius 5;
		height 5;
		+nointeraction;
		+noblockmap;
		+nodamagethrust;
		Obituary "%o was besieged by %k.";
	}
	
	states
	{
		spawn:
			TNT1 A 0 nodelay A_Explode(128,128,0,0,96); //this function is literally copypasted from SP_GaussTrailSiegeAOE, shouldnt behave different
			TNT1 A 1;
			stop;
	}
}